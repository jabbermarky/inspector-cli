
 RUN  v3.2.4 /Users/marklummus/Documents/inspector-cli

 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Advanced Page Mock Scenarios > should create page mocks with complex robots.txt data 5ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Advanced Page Mock Scenarios > should create page mocks with complex HTTP headers 1ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Advanced Page Mock Scenarios > should create page mocks with API endpoint responses 1ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Advanced Page Mock Scenarios > should handle meta tag variations 1ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Strategy Execution Patterns > should execute strategy with realistic timing 2ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Strategy Execution Patterns > should handle strategy failures with proper error propagation 5ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Strategy Execution Patterns > should validate detection results thoroughly 1ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Strategy Set Management > should create and execute mixed strategy sets 1ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Strategy Set Management > should handle large strategy sets efficiently 8ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMockStrategy > should create a basic mock strategy with defaults 3ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMockStrategy > should create a mock strategy with custom options 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMockStrategy > should create a successful detection result 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMockStrategy > should create a failing strategy 2ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createStrategyPageMock > should create a basic page mock 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createStrategyPageMock > should configure meta-tag strategy page mock 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createStrategyPageMock > should configure http-headers strategy page mock 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createStrategyPageMock > should configure robots-txt strategy page mock 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createStrategyPageMock > should configure api-endpoint strategy page mock 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createStrategyPageMock > should configure html-content strategy page mock 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createFailingStrategy > should create a strategy that throws timeout error 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createFailingStrategy > should create a strategy that throws network error 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createFailingStrategy > should create a strategy with custom error message 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMockStrategySet > should create default set of 3 strategies 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMockStrategySet > should create custom number of strategies 4ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMockStrategySet > should create strategies with varying confidence levels 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMixedStrategySet > should create a mix of successful and failing strategies 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMixedStrategySet > should have working successful strategies 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > createMixedStrategySet > should have working failing strategies 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > expectValidDetectionResult > should pass validation for valid result 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > expectValidDetectionResult > should fail validation for invalid confidence 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > expectValidDetectionResult > should fail validation for missing required fields 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > expectValidDetectionResult > should validate optional fields when present 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > expectValidDetectionResult > should fail validation for invalid execution time 1ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Legacy Strategy Support > should support legacy MockDetectionStrategy class 101ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > Legacy MockDetectionStrategy class > should create a working strategy instance 102ms
 ✓ src/commands/__tests__/integration.test.ts > Integration: CMS Detection Workflows > Command Integration > CMS Detection Workflow > should process CSV file end-to-end 6ms
 ✓ src/commands/__tests__/integration.test.ts > Integration: CMS Detection Workflows > Command Integration > CMS Detection Workflow > should handle single URL detection workflow 1ms
 ✓ src/commands/__tests__/integration.test.ts > Integration: CMS Detection Workflows > Command Integration > Analysis Workflow > should complete data analysis end-to-end 2ms
 ✓ src/commands/__tests__/integration.test.ts > Integration: CMS Detection Workflows > Workflow Validation > should validate data collection workflow 1ms
 ✓ src/commands/__tests__/integration.test.ts > Integration: CMS Detection Workflows > Workflow Validation > should validate error recovery workflow 2ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Constructor and Configuration > should create hybrid detector with default options 5ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Constructor and Configuration > should create hybrid detector with custom options 1ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Constructor and Configuration > should filter enabled strategies correctly 1ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetry > should succeed on first try 2ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetry > should retry on retryable errors 12ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetry > should not retry on non-retryable errors 2ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetry > should fail after max retries 32ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetry > should detect OpenAI rate limit errors 12ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetry > should detect server errors 11ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Legacy Strategy Support > should support legacy createMockStrategies function 126ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Error Scenario Coverage > should handle all error types in failing strategies 2ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Error Scenario Coverage > should handle custom error messages 1ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Evasion Strategy Coverage > should handle all evasion strategy types 1ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Performance and Memory Tests > should handle many strategy creations without memory leaks 7ms
 ✓ src/test-utils/__tests__/mocks/strategies-integration.test.ts > Strategy Mock Integration Tests > Performance and Memory Tests > should handle rapid strategy execution 12ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Individual Strategy Testing > 1. MetaTagStrategy should work 5ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Individual Strategy Testing > 2. HtmlContentStrategy should work 5ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Individual Strategy Testing > 3. ApiEndpointStrategy should work 11ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Individual Strategy Testing > 4. HttpHeaderStrategy should work 4ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Individual Strategy Testing > 5. RobotsTxtStrategy should work 3ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Individual Strategy Testing > 6. WordPressPluginStrategy should work 3ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Individual Strategy Testing > should detect WordPress from meta generator tag 6ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Individual Strategy Testing > should handle missing meta tag gracefully 5ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > HTML Content Detection > should detect WordPress from wp-content paths 6ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > HTML Content Detection > should not detect WordPress from unrelated content 9ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > API Endpoint Detection > should detect WordPress from wp-json API 8ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > API Endpoint Detection > should handle API endpoint not found 2ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Plugin Detection > should detect WordPress plugins from HTML 14ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Plugin Detection > should extract plugin versions when available 2ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Plugin Detection > should handle plugin API endpoint when available 9ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Plugin Detection > should deduplicate plugins from different sources 2ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Confidence Scoring > should have high confidence with meta tag detection 3ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Confidence Scoring > should have medium confidence with HTML content only 11ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Confidence Scoring > should aggregate confidence from multiple successful strategies 3ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Error Handling > should handle strategy failures gracefully 4ms
 ✓ src/utils/cms/__tests__/detectors/wordpress.test.ts > WordPress Detector > Error Handling > should continue with other strategies if one fails 2ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Constructor and Configuration > should create collector with default configuration 4ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Constructor and Configuration > should create collector with custom configuration 1ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Basic Detection > should detect CMS with single successful strategy 103ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetry > should handle network errors 45ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > Legacy MockDetectionStrategy class > should handle failures correctly 101ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > Legacy MockDetectionStrategy class > should simulate execution time 53ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > Legacy createMockStrategies function > should create all strategy types 1ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > Legacy createMockStrategies function > should have correct confidence levels 102ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Basic Detection > should combine multiple successful strategies 102ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > Legacy createMockStrategies function > should include version information when specified 100ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > Type Safety > should accept all valid strategy types 3ms
 ✓ src/test-utils/__tests__/mocks/strategies.test.ts > Strategy Mock Utilities > Type Safety > should accept all valid error types 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Performance Tests > should handle large batches efficiently 226ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Performance Tests > should query large datasets efficiently 83ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Initialization > should initialize successfully 3ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Initialization > should handle missing index file gracefully 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Initialization > should handle corrupted index file 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Initialization > should handle mkdir errors gracefully 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Store Operations > should store single data point 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Store Operations > should generate unique file IDs 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Store Operations > should handle storage failures gracefully 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Store Operations > should handle concurrent stores safely 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Batch Storage Operations > should store multiple data points in batch 4ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Batch Storage Operations > should handle empty batch 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Batch Storage Operations > should handle batch storage errors 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Query Operations > should query by CMS type 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Query Operations > should query by multiple CMS types 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Query Operations > should query Duda data points 5ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Query Operations > should query by multiple CMS types including Duda 3ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Query Operations > should query by confidence threshold 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Query Operations > should query by date range 12ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Query Operations > should handle complex query combinations 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Query Operations > should return empty results for no matches 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Statistics Operations > should provide accurate statistics 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Statistics Operations > should handle empty storage statistics 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Error Handling > should handle read errors gracefully 7ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Error Handling > should handle index corruption 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Error Handling > should handle missing data files 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Export Operations > should export to JSON format 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Export Operations > should export to JSONL format 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Export Operations > should export to CSV format 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Unit Tests > Export Operations > should handle export errors 3ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Command Registration and Structure > should have ground-truth command registered with commander 358ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Command Registration and Structure > should support required command options 8ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Command Registration and Structure > should accept input argument for URL or CSV file 5ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Utility Integration > should integrate with CSV URL extraction utility 3ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Utility Integration > should integrate with input type detection utility 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Utility Integration > should integrate with CMS detection iterator 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Utility Integration > should integrate with robots.txt analyzer 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Expected Output Patterns > should simulate Duda detection workflow output 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Expected Output Patterns > should simulate WordPress detection workflow output 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Expected Output Patterns > should simulate error handling output 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Expected Output Patterns > should simulate compact mode output format 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Expected Output Patterns > should simulate batch processing output 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Ground Truth Database Simulation > should simulate statistics display 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Ground Truth Database Simulation > should simulate interactive prompts 0ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Ground Truth Database Simulation > should simulate version detection output 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Signal Analysis Simulation > should simulate feature analysis output 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Signal Analysis Simulation > should simulate no features found scenario 0ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Error Handling Scenarios > should simulate URL processing errors 0ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Error Handling Scenarios > should simulate missing data file scenario 0ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Error Handling Scenarios > should simulate graceful shutdown 0ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Error Handling Scenarios > should simulate empty ground truth database 0ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Command Integration Readiness > should be structured for production use 1ms
 ✓ src/commands/__tests__/ground-truth.functional.test.ts > Functional: ground-truth.ts Command > Command Integration Readiness > should maintain consistent output formatting 1ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Basic Detection > should handle partial strategy failures gracefully 101ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Performance Tests > should handle concurrent operations 11ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Reliability Tests > should handle filesystem errors gracefully 10ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Reliability Tests > should recover from partial writes 26ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Data Integrity Tests > should preserve data across restarts 36ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Performance Tests > should handle large batches efficiently 251ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Confidence Calculation > should apply strategy weights correctly 101ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Data Integrity Tests > should keep index in sync with files 31ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Data Integrity Tests > should handle concurrent access safely 6ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Export Integration Tests > should export to real files 43ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Performance Tests > should query large datasets efficiently 122ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Performance Tests > should handle concurrent operations 21ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Reliability Tests > should handle filesystem errors gracefully 10ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Reliability Tests > should recover from partial writes 16ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Data Integrity Tests > should preserve data across restarts 7ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Data Integrity Tests > should keep index in sync with files 12ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Data Integrity Tests > should handle concurrent access safely 7ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Confidence Calculation > should respect confidence threshold 101ms
 ✓ src/commands/__tests__/integration.test.ts > Integration: CMS Detection Workflows > Performance Integration > should meet performance benchmarks for batch processing 509ms
 ✓ src/utils/cms/__tests__/analysis/storage.integration.test.ts > DataStorage Integration Tests > Export Integration Tests > should handle large export operations 147ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Export Integration Tests > should export to real files 30ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Basic Data Collection > should collect basic data from valid URL 599ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Basic Data Collection > should collect navigation metadata 86ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Confidence Calculation > should cap confidence at 1.0 102ms
 ✓ src/utils/cms/__tests__/analysis/storage.functional.test.ts > DataStorage Integration Tests > Export Integration Tests > should handle large export operations 221ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Strategy Requirements > should warn when insufficient strategies are enabled 102ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Strategy Requirements > should handle no enabled strategies 1ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Basic Data Collection > should collect HTTP headers 61ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Basic Data Collection > should collect HTML content when enabled 26ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Basic functionality > should return correct name and timeout 3ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Basic functionality > should handle missing robots.txt data gracefully 2ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Basic functionality > should handle inaccessible robots.txt gracefully 5ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Basic functionality > should handle empty robots.txt content gracefully 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Disallow pattern matching > should detect WordPress admin paths 2ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Disallow pattern matching > should be case-insensitive for string patterns 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Disallow pattern matching > should handle regex patterns in disallow paths 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Disallow pattern matching > should detect multiple disallow patterns 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Sitemap pattern matching > should detect WordPress sitemap URLs 2ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Sitemap pattern matching > should handle regex patterns in sitemap URLs 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Sitemap pattern matching > should be case-insensitive for sitemap string patterns 3ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Content pattern matching > should detect patterns in full content 2ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Content pattern matching > should handle regex patterns in content 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Content pattern matching > should be case-insensitive for content string patterns 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Confidence aggregation and capping > should aggregate confidence from multiple patterns 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Confidence aggregation and capping > should cap confidence at 1.0 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Predefined CMS patterns > should detect WordPress with predefined patterns 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Predefined CMS patterns > should detect Drupal with predefined patterns 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Predefined CMS patterns > should detect Joomla with predefined patterns 2ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Pattern collision scenarios > should distinguish between Drupal and Joomla modules directories 1ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Pattern collision scenarios > should distinguish between Drupal and Joomla themes directories 7ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Edge cases and error handling > should handle malformed robots.txt content 3ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Edge cases and error handling > should handle errors gracefully 2ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Edge cases and error handling > should handle empty pattern arrays 2ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Edge cases and error handling > should handle null patterns data 2ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Edge cases and error handling > should handle undefined disallowed paths 2ms
 ✓ src/utils/cms/__tests__/strategies/robots-txt.test.ts > RobotsTxtStrategy > Evidence collection > should collect evidence for all matched patterns 4ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Error Handling > should handle all strategies failing 102ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Error Handling > should handle detector-level errors gracefully 2ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Meta Tags Collection > should collect meta tags with various attributes 62ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > DOM Analysis Collection > should collect DOM elements analysis when enabled 28ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Links Collection > should collect link elements and anchor links 59ms
 ✓ src/commands/__tests__/integration.test.ts > Integration: CMS Detection Workflows > Performance Integration > should handle concurrent detection limits 504ms
 ✓ src/commands/__tests__/integration.test.ts > Integration: CMS Detection Workflows > Data Integrity > should maintain data consistency across workflows 1ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Scripts and Stylesheets Collection > should collect script and stylesheet information when enabled 22ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Forms Collection > should collect form information 63ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Error Handling > should handle navigation errors gracefully 3ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Error Handling > should handle invalid URLs 3ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Constructor > should create browser manager with detection config 4ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Constructor > should create browser manager with capture config 1ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Constructor > should merge user config with defaults 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Page Creation > should create page for detection purpose 18ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Page Creation > should create page for capture purpose with different navigation strategy 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Page Creation > should set browser manager context on page 3ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Page Creation > should handle navigation errors appropriately 5ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Page Creation > should handle timeout errors 4ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Resource Blocking > should setup aggressive resource blocking for detection 4ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Resource Blocking > should setup moderate resource blocking for capture 26ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Resource Blocking > should not setup resource blocking when disabled 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Screenshot Capture > should capture screenshot with dimensions 4ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Screenshot Capture > should handle screenshot capture errors 3ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Screenshot Capture > should capture partial screenshots 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Navigation Strategy > should use domcontentloaded for detection purpose 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Navigation Strategy > should use networkidle0 for capture purpose 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Navigation Strategy > should handle additional wait time for capture 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Error Handling > should categorize DNS resolution errors 3ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Error Handling > should categorize connection refused errors 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Error Handling > should categorize timeout errors 3ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Error Handling > should handle unknown navigation errors 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Cleanup > should cleanup browser and pages 11ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Cleanup > should handle cleanup errors gracefully 3ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Cleanup > should close individual pages 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Debug Features > should setup console capture when enabled 2ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Debug Features > should not setup console capture when disabled 4ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Isolated Context Management > should create isolated browser context 3ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Isolated Context Management > should create page in isolated context 4ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Isolated Context Management > should close isolated context and release semaphore 4ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Isolated Context Management > should handle context creation errors gracefully 4ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Static Semaphore Management > should provide static semaphore access 8ms
 ✓ src/utils/browser/__tests__/manager.test.ts > BrowserManager > Static Semaphore Management > should reset semaphore state 3ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Performance Metrics > should track execution times accurately 203ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Error Handling > should handle page evaluation errors 31ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Configuration Impact > should create collector with includeHtmlContent disabled 2ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Configuration Impact > should create collector with includeDomAnalysis disabled 3ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Configuration Impact > should create collector with includeScriptAnalysis disabled 3ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Performance Metrics > should track execution time 60ms
 ✓ src/utils/cms/__tests__/analysis/collector.test.ts > DataCollector > Data Integrity > should return consistent result structure 23ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > extractDomain > should be imported from centralized URL utilities 3ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > extractDomain > should extract domains correctly 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > extractDomain > should handle URLs with ports 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > extractDomain > should handle invalid URLs gracefully 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > successful DNS resolution > should resolve IPv4 addresses successfully 2ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > successful DNS resolution > should resolve IPv6 addresses successfully 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > successful DNS resolution > should prefer IPv4 when both are available 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > input validation > should handle empty URLs 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > input validation > should handle whitespace-only URLs 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > input validation > should handle null and undefined URLs 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > input validation > should reject invalid domain formats 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > DNS error handling > should handle all DNS resolution failures 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > DNS error handling > should handle mixed DNS resolution failures 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > DNS error handling > should handle network errors as generic failures 0ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > DNS error handling > should handle timeout errors 57ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > DNS error handling > should handle generic DNS resolution failures 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > timeout behavior > should respect custom timeout values 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > timeout behavior > should use default timeout when not specified 0ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNS > domain extraction integration > should extract domains from full URLs 0ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNSBatch > should validate multiple URLs successfully 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNSBatch > should handle mixed valid and invalid URLs 0ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNSBatch > should respect custom timeout in batch validation 1ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNSBatch > should respect concurrency limits 46ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNSBatch > should handle empty URL list 0ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNSBatch > should use default options when none provided 0ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNSBatch > should handle batch with all failing URLs 0ms
 ✓ src/utils/dns/__tests__/validator.test.ts > DNS Validator > validateDNSBatch > should measure duration for each URL in batch 0ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetryOpenAI > should use OpenAI-specific retry configuration 1001ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Source Type Handling > should differentiate between builtin and generated strategies 102ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Version Extraction > should extract version information when available 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Initialization > should initialize successfully 3ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Initialization > should handle missing index file gracefully 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Initialization > should handle corrupted index file 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Initialization > should handle mkdir errors gracefully 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Store Operations > should store single data point 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Store Operations > should generate unique file IDs 15ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Store Operations > should handle storage failures gracefully 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Store Operations > should handle concurrent stores safely 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Batch Storage Operations > should store multiple data points in batch 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Batch Storage Operations > should handle empty batch 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Batch Storage Operations > should handle batch storage errors 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Query Operations > should query by CMS type 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Query Operations > should query by multiple CMS types 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Query Operations > should query Duda data points 2ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Query Operations > should query by multiple CMS types including Duda 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Query Operations > should query by confidence threshold 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Query Operations > should query by date range 4ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Query Operations > should handle complex query combinations 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Query Operations > should return empty results for no matches 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Statistics Operations > should provide accurate statistics 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Statistics Operations > should handle empty storage statistics 3ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Error Handling > should handle read errors gracefully 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Error Handling > should handle index corruption 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Error Handling > should handle missing data files 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Export Operations > should export to JSON format 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Export Operations > should export to JSONL format 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Export Operations > should export to CSV format 1ms
 ✓ src/utils/cms/__tests__/analysis/storage.test.ts > DataStorage Unit Tests > Export Operations > should handle export errors 1ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > Evidence Collection > should aggregate evidence from all successful strategies 105ms
 ✓ src/utils/cms/__tests__/hybrid/detector.test.ts > HybridCMSDetector > CMS Type Handling > should work with different CMS types 305ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Strategy Timeout Handling > should handle strategy timeout gracefully 5ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Strategy Timeout Handling > should handle timeout in HTML content strategy 2ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Strategy Timeout Handling > should handle timeout in API endpoint strategy 3ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Retry Behavior > should handle network errors gracefully 1ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Retry Behavior > should handle non-retryable errors 2ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Retry Behavior > should handle ECONNRESET errors 2ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Retry Behavior > should handle ENOTFOUND errors 1ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Concurrent Strategy Execution > should handle parallel strategy execution 31ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Concurrent Strategy Execution > should handle some strategies timing out while others succeed 6ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Error Types and Handling > should properly categorize and handle CMSTimeoutError 18ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Error Types and Handling > should properly categorize and handle CMSNetworkError 13ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Strategy Performance > should complete strategies within reasonable time 10ms
 ✓ src/utils/cms/__tests__/timeout-retry.test.ts > CMS Detection Timeout and Retry Behavior > Strategy Performance > should handle strategy execution time tracking 103ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService > constructor > should create a new ScreenshotService instance 2ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService > constructor > should have all required methods 1ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService > method existence > should have captureScreenshot method 1ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService > method existence > should have validateOptions method 0ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService > method existence > should have cleanup method 1ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Input Validation > throws ScreenshotValidationError for missing URL 2ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Input Validation > throws ScreenshotValidationError for invalid URL protocol 0ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Input Validation > throws ScreenshotValidationError for missing path 1ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Input Validation > throws ScreenshotValidationError for invalid path extension 8ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Input Validation > throws ScreenshotValidationError for width below minimum 32ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Input Validation > throws ScreenshotValidationError for width above maximum 1ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Input Validation > throws ScreenshotValidationError for timeout below minimum 1ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Input Validation > throws ScreenshotValidationError for timeout above maximum 0ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Successful Screenshot > returns ScreenshotResult for valid input 23ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Error Handling > throws ScreenshotNetworkError for browser launch failure 12ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Error Handling > throws ScreenshotNetworkError for navigation timeout 8ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Error Handling > throws ScreenshotNetworkError for network error during navigation 22ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Resource Cleanup > closes browser and page on success 23ms
 ✓ src/utils/screenshot/__tests__/service.test.ts > ScreenshotService - Resource Cleanup > closes browser and page on failure 9ms
 ✓ src/utils/url/__tests__/types.test.ts > URL Validation Error Classes > UrlValidationError > should create error with message and type 2ms
 ✓ src/utils/url/__tests__/types.test.ts > URL Validation Error Classes > UrlValidationError > should create error with options 1ms
 ✓ src/utils/url/__tests__/types.test.ts > URL Validation Error Classes > UrlProtocolError > should create protocol error 1ms
 ✓ src/utils/url/__tests__/types.test.ts > URL Validation Error Classes > UrlDomainError > should create domain error 1ms
 ✓ src/utils/url/__tests__/types.test.ts > URL Validation Error Classes > UrlSecurityError > should create security error 0ms
 ✓ src/utils/url/__tests__/types.test.ts > URL Validation Error Classes > UrlFormatError > should create format error 1ms
 ✓ src/utils/url/__tests__/types.test.ts > URL Validation Error Classes > Error inheritance > should inherit from UrlValidationError 1ms
 ✓ src/utils/url/__tests__/types.test.ts > URL Validation Error Classes > Error inheritance > should inherit from Error 5ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Width Parameter Parsing > should parse valid width parameter 5ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Width Parameter Parsing > should handle invalid width parameter 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Width Parameter Parsing > should use default width when not specified 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Width Parameter Parsing > should use custom width when specified 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > File Path Analysis > should analyze and process file path with width 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > File Path Analysis > should handle relative paths 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > File Path Analysis > should handle absolute paths 10ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > File Path Analysis > should handle paths with different extensions 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > File Path Analysis > should handle paths without extensions 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Screenshot Capture > should take screenshot successfully 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Screenshot Capture > should handle screenshot capture errors 2ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Screenshot Capture > should handle invalid URLs 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Screenshot Capture > should handle network timeouts 7ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Screenshot Capture > should handle different screen widths 40ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > URL Validation > should handle HTTP URLs 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > URL Validation > should handle HTTPS URLs 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > URL Validation > should handle URLs with paths 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > URL Validation > should handle URLs with query parameters 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > URL Validation > should handle localhost URLs 3ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Error Handling and Logging > should handle file system permission errors 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Error Handling and Logging > should handle disk space errors 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Error Handling and Logging > should handle browser launch failures 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Error Handling and Logging > should handle page load failures 2ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Edge Cases and Validation > should handle very small width values 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Edge Cases and Validation > should handle very large width values 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Edge Cases and Validation > should handle zero width value 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Edge Cases and Validation > should handle negative width values 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Edge Cases and Validation > should handle width values with decimals 3ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Path Security and Validation > should handle paths with special characters 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Path Security and Validation > should handle paths with spaces 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Path Security and Validation > should handle Unicode characters in paths 3ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Path Security and Validation > should handle empty path strings 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Integration with Command Options > should process complete command scenario with defaults 0ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Integration with Command Options > should process complete command scenario with custom width 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Performance and Resource Management > should handle multiple screenshot requests 1ms
 ✓ src/commands/__tests__/screenshot.test.ts > Screenshot Command > Performance and Resource Management > should handle screenshot timeout scenarios 1ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > Basic Configuration > should return correct name 4ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > Basic Configuration > should return correct timeout 1ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > Basic Configuration > should use default timeout if not specified 1ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > JSON Response Analysis > should detect WordPress from JSON API response 7ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > JSON Response Analysis > should detect WordPress without version info 4ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > JSON Response Analysis > should detect Joomla from JSON API response 4ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > JSON Response Analysis > should detect Drupal from JSON API response 12ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > JSON Response Analysis > should handle malformed JSON gracefully 2ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > JSON Response Analysis > should extract version from generic JSON structure 6ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > Text Response Analysis > should analyze text response with CMS reference 5ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > Text Response Analysis > should analyze text response without CMS reference 3ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > Text Response Analysis > should handle text analysis errors 2ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > HTTP Status Handling > should handle 404 responses 4ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > HTTP Status Handling > should handle non-200 status codes 1ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > HTTP Status Handling > should handle no response 1ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > Error Handling > should handle navigation errors 2ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > Error Handling > should handle page evaluation errors in JSON analysis 3ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > URL Construction > should construct API URL correctly with trailing slash 5ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > URL Construction > should construct API URL correctly without trailing slash 4ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > Version Extraction > should extract version from various patterns 5ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > CMS-Specific JSON Analysis > should analyze WordPress JSON structure without wordpress object 3ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > CMS-Specific JSON Analysis > should analyze Joomla JSON with attributes only 5ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > CMS-Specific JSON Analysis > should analyze Drupal JSON with core object 64ms
 ✓ src/utils/cms/__tests__/strategies/api-endpoint.test.ts > ApiEndpointStrategy > CMS-Specific JSON Analysis > should analyze Drupal JSON as array 17ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Meta Tag Detection > should detect Drupal from meta generator tag 9ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Meta Tag Detection > should handle missing meta tag gracefully 7ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > HTML Content Detection > should detect Drupal from drupal-specific paths 39ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > HTML Content Detection > should detect Drupal from drupal.js reference 4ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > HTML Content Detection > should detect Drupal from Drupal.settings reference 1ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > HTML Content Detection > should not detect Drupal from unrelated content 2ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > File Detection Strategy > should detect Drupal from CHANGELOG.txt file 3ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > File Detection Strategy > should detect Drupal from core/CHANGELOG.txt file 2ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > File Detection Strategy > should detect Drupal from INSTALL.txt file 29ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > File Detection Strategy > should handle file detection failures gracefully 17ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Confidence Scoring > should have high confidence with meta tag detection 22ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Confidence Scoring > should have high confidence with file detection 1ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Confidence Scoring > should have medium confidence with HTML content only 1ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Error Handling > should handle strategy failures gracefully 1ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Error Handling > should continue with other strategies if one fails 2ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Version Extraction > should extract version from meta generator tag 2ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Version Extraction > should extract version from changelog file 5ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Version Extraction > should work without version when not available 2ms
 ✓ src/utils/cms/__tests__/detectors/drupal.test.ts > Drupal Detector > Strategy Weights > should use correct strategy weights for drupal detection 2ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Batch Processing > should finalize iterator after processing all URLs 10ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Batch Processing > should finalize iterator even when detection fails 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Batch Processing > should handle finalize errors gracefully 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Batch Processing > should not create iterator for empty URL list 9ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Unified Pipeline Processing > should use iterator for both single URL and batch processing 17ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Unified Pipeline Processing > should produce identical results for same URL in single vs batch mode 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Iterator Lifecycle > should follow correct lifecycle pattern 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Iterator Initialization > should handle iterator initialization failures 3ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Iterator Initialization > should handle null iterator scenario 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Iterator Initialization > should pass data collection options to iterator 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Skipped URLs and DNS Handling > should handle skipped URLs due to DNS failures 2ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Skipped URLs and DNS Handling > should handle skipped URLs with custom skip reasons 7ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Error Handling Scenarios > should handle URLs with errors but not skipped 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Error Handling Scenarios > should handle mixed success, failure, and skip scenarios 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > CMS Detection Success Criteria > should mark known CMS as successful 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > CMS Detection Success Criteria > should mark Unknown CMS as failed detection 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Console Output and Progress Tracking > should display progress correctly for successful detection 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Console Output and Progress Tracking > should display progress correctly for CMS without version 0ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Console Output and Progress Tracking > should show total progress for multiple URLs 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Data Collection Configuration > should use default data collection when not specified 1ms
 ✓ src/commands/__tests__/detect_cms.test.ts > CMS Detection Command > Data Collection Configuration > should respect explicitly disabled data collection 3ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should create a basic page mock with defaults 8ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should create a page mock with custom options 1ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should configure page mock for navigation failures 7ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should configure page mock for evaluation failures 4ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should configure custom evaluation implementation 2ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should handle user agent requests in default evaluation 1ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should handle title requests in default evaluation 1ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should handle meta tag queries in default evaluation 2ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should add robots.txt data when provided 2ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should add browser manager context when headers provided 3ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMockPage > should add browser manager context when browserContext provided 1ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMetaTagMockPage > should create a page mock configured for meta tag strategy 2ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMetaTagMockPage > should return meta tags when meta selector is used 1ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createMetaTagMockPage > should return empty array for non-meta queries 2ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createHttpHeaderMockPage > should create a page mock with HTTP headers 2ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createHttpHeaderMockPage > should set correct navigation context 19ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createRobotsTxtMockPage > should create a page mock with robots.txt data 11ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > createRobotsTxtMockPage > should handle inaccessible robots.txt 5ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > Mock Method Functionality > should have all required Puppeteer page methods 4ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > Mock Method Functionality > should have mock functions for all methods 1ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > Mock Method Functionality > should return promises for async methods 1ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > Error Handling > should properly mock navigation failures 1ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > Error Handling > should properly mock evaluation failures 1ms
 ✓ src/test-utils/__tests__/factories/page-factory.test.ts > Page Factory Utilities > Error Handling > should allow successful operations when no failures configured 2ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Command Registration and Structure > should have eval command registered with commander 93ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Command Arguments and Options > should accept assistant and infilename arguments 3ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Storage Initialization > should initialize storage with default data directory 4ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Storage Initialization > should initialize storage with custom data directory 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Storage Initialization > should handle storage initialization errors 3ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Rule Generator Initialization > should initialize rule generator with default options 72ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Rule Generator Initialization > should initialize rule generator with custom options 11ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Data Processing > should handle sufficient data for generation 4ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Data Processing > should handle empty data scenario 3ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Data Processing > should handle insufficient data for generation 1ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Command Arguments and Options > should support temperature option 7ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Command Arguments and Options > should support top_p option 4ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Command Arguments and Options > should support outfile option 25ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Command Execution (Placeholder Implementation) > should log command execution with basic parameters 2ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Command Execution (Placeholder Implementation) > should handle temperature parameter parsing 1ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Command Execution (Placeholder Implementation) > should handle different assistant types 2ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Command Execution (Placeholder Implementation) > should handle different input file formats 21ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Option Handling > should handle all options together 1ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Option Handling > should handle missing optional parameters 1ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Option Handling > should handle partial options 1ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Future Implementation Readiness > should be structured for future implementation 1ms
 ✓ src/commands/__tests__/eval.functional.test.ts > Functional: eval.ts Command > Future Implementation Readiness > should maintain consistent logging structure for future features 0ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Strategy Generation > should generate strategies successfully 3ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Strategy Generation > should handle no strategies generated 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Strategy Generation > should handle strategy generation errors 4ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > File Operations > should write strategies to files 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > File Operations > should handle file writing errors 2ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > File Operations > should handle dry run mode 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Strategy Validation > should validate generated strategies 2ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Strategy Validation > should handle validation errors 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Strategy Validation > should handle empty validation results 6ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > CMS Type Filtering > should filter by specific CMS types 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > CMS Type Filtering > should handle invalid CMS types 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Confidence Threshold Handling > should respect minimum confidence threshold 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Confidence Threshold Handling > should handle confidence threshold validation 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Integration Instructions > should generate integration instructions for strategies 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Error Handling > should handle missing data directory 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Error Handling > should handle rule generation failures 8ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Error Handling > should handle file system errors 1ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Output Configuration > should handle custom output directory 13ms
 ✓ src/commands/__tests__/generate.test.ts > Generate Command > Output Configuration > should handle test generation options 5ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > parseCSV > should parse valid CSV data 15ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > parseCSV > should handle CSV with quotes 3ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > parseCSV > should skip empty lines 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > parseCSV > should trim whitespace 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > parseCSV > should handle empty CSV data 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > extractUrlsFromCSV > should extract URLs from csv file with url column 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > extractUrlsFromCSV > should work with urls column name 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > extractUrlsFromCSV > should work with website column name 4ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > extractUrlsFromCSV > should work with link column name 11ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > extractUrlsFromCSV > should skip empty URL cells 7ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > extractUrlsFromCSV > should throw error for empty CSV files 4ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > extractUrlsFromCSV > should throw error when no URL column found 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > extractUrlsFromCSV > should throw error when no valid URLs found 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > extractUrlsFromCSV > should be case insensitive for column names 92ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > detectInputType > should detect CSV files by extension 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > detectInputType > should detect URLs with protocols 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > detectInputType > should detect URLs without protocols 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > detectInputType > should handle ambiguous inputs 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > detectInputType > should detect clearly invalid URLs as csv 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > detectInputType > should handle URLs that start with http but need https 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > cleanUrlForDisplay > should remove https protocol 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > cleanUrlForDisplay > should remove http protocol 0ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > cleanUrlForDisplay > should remove trailing slash 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > cleanUrlForDisplay > should handle URLs without protocols 0ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > cleanUrlForDisplay > should handle complex URLs 0ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > cleanUrlForDisplay > should preserve paths and query parameters 0ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > validJSON > should return true for valid JSON strings 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > validJSON > should return false for invalid JSON strings 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > validJSON > should handle complex nested JSON 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > validJSON > should handle JSON with special characters 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseInt > should parse valid integer strings 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseInt > should handle large integers 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseInt > should parse integers with leading zeros 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseInt > should throw InvalidArgumentError for non-numeric strings 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseInt > should throw InvalidArgumentError for invalid inputs 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseInt > should ignore the second parameter as specified 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseDecimal > should parse valid decimal strings 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseDecimal > should parse integers as decimals 4ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseDecimal > should handle scientific notation 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseDecimal > should handle edge cases 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseDecimal > should throw InvalidArgumentError for non-numeric strings 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseDecimal > should throw InvalidArgumentError for invalid inputs 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > myParseDecimal > should ignore the second parameter as specified 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validate > should pass validation for valid options 6ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validate > should reject empty URL 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validate > should reject invalid protocols 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validate > should reject invalid width 0ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validatePath > should accept valid image paths 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validatePath > should reject empty or invalid paths 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validatePath > should reject paths with security vulnerabilities 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validatePath > should reject paths with invalid extensions 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validatePath > should handle case-insensitive extensions 2ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateWidth > should accept valid widths 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateWidth > should reject invalid width types 22ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateWidth > should reject negative and zero widths 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateWidth > should reject widths below minimum (320px) 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateWidth > should reject widths above maximum (3840px) 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateWidth > should reject non-integer widths 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateTimeout > should accept valid timeouts 3ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateTimeout > should allow undefined timeout (optional) 0ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateTimeout > should reject invalid timeout types 8ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateTimeout > should reject Infinity timeout values 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateTimeout > should reject negative and zero timeouts 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateTimeout > should reject timeouts below minimum (1000ms) 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateTimeout > should reject timeouts above maximum (300000ms) 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateUrl - comprehensive error scenarios > should reject malformed URLs 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateUrl - comprehensive error scenarios > should handle edge case URLs that may pass validation 0ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > validateUrl - comprehensive error scenarios > should accept various valid URL formats 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > complex validation scenarios > should validate complete valid options 0ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > complex validation scenarios > should handle multiple validation errors correctly 0ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > complex validation scenarios > should preserve error context information 1ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > normalizeUrl > should add HTTP to URLs without protocol 0ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > normalizeUrl > should not modify HTTPS URLs 0ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > normalizeUrl > should not modify HTTP URLs 0ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > normalizeUrl > should handle complex URLs 0ms
 ✓ src/utils/screenshot/__tests__/validation.test.ts > ScreenshotValidator > normalizeUrl > should handle development-friendly URLs 0ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > delay > should delay execution for specified milliseconds 101ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > delay > should work with zero delay 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > delay > should work with very small delays 3ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > delay > should return a promise 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > delay > should handle negative delays gracefully 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > segmentImageHeaderFooter > should throw error for non-existent files 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > segmentImageHeaderFooter > should attempt to process and fail due to image format (validates flow) 5ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > segmentImageHeaderFooter > should validate input parameters exist 4ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > segmentImageHeaderFooter > should validate file path security 1ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > segmentImageHeaderFooter > should handle valid options without throwing validation errors 2ms
 ✓ src/utils/__tests__/csv-processing.test.ts > CSV Processing Functions > segmentImageHeaderFooter > should handle default options (no header or footer specified) 5ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Basic functionality > should return correct name and timeout 4ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Basic functionality > should handle missing headers gracefully 8ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Basic functionality > should handle missing browser context gracefully 2ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Pattern matching in header values > should detect WordPress in X-Generator header 25ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Pattern matching in header values > should detect string patterns in header values 2ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Pattern matching in header values > should be case-insensitive for string patterns 4ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Case-insensitive header name matching > should match headers with different casing 32ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Case-insensitive header name matching > should handle various header name cases 7ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Wildcard pattern matching > should search all headers when pattern name is "*" 2ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Wildcard pattern matching > should handle regex patterns with wildcards 3ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Version extraction > should extract version from regex patterns 6ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Version extraction > should extract version from Drupal headers 8ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Version extraction > should not extract version from string patterns 2ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > SearchIn parameter functionality > should search in header names when searchIn is "name" 3ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > SearchIn parameter functionality > should search in both names and values when searchIn is "both" 1ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > SearchIn parameter functionality > should default to searching in values when searchIn is not specified 1ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Multiple patterns and confidence aggregation > should aggregate confidence from multiple matching patterns 2ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Multiple patterns and confidence aggregation > should cap confidence at 1.0 4ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Real-world CMS header patterns > should detect WordPress with common header patterns 2ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Real-world CMS header patterns > should detect Drupal with specific headers 1ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Real-world CMS header patterns > should detect Joomla with headers 33ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Error handling > should handle errors gracefully 10ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Evidence collection > should collect evidence for matched patterns 3ms
 ✓ src/utils/cms/__tests__/strategies/http-headers.test.ts > HttpHeaderStrategy > Evidence collection > should truncate long header values in evidence 2ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Exports > should export main classes 2ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Exports > should export error classes 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Exports > should export convenience functions 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Exports > should export new utility functions 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Convenience functions > validateUrl > should validate URLs correctly 2ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Convenience functions > validateUrl > should throw errors for invalid URLs 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Convenience functions > validateUrl > should pass options through 74ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Convenience functions > normalizeUrl > should normalize URLs correctly 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Convenience functions > normalizeUrl > should handle custom context 6ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Convenience functions > normalizeUrl > should throw errors for invalid input 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Convenience functions > validateAndNormalizeUrl > should validate and normalize in one step 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Convenience functions > validateAndNormalizeUrl > should throw validation errors 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Convenience functions > validateAndNormalizeUrl > should handle options correctly 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > extractDomain > should extract domain from valid URLs 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > extractDomain > should handle URLs with ports 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > extractDomain > should handle invalid URLs gracefully 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > joinUrl > should join URLs correctly 4ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > joinUrl > should handle complex paths 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > joinUrl > should fallback gracefully for invalid base URLs 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > createValidationContext > should create production context correctly 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > createValidationContext > should create development context correctly 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > createValidationContext > should create testing context correctly 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > createValidationContext > should throw error for unknown purpose 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > detectInputType > should detect CSV files 3ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > detectInputType > should detect valid URLs 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > detectInputType > should handle edge cases correctly 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > cleanUrlForDisplay > should remove protocols 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > cleanUrlForDisplay > should remove trailing slashes 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > cleanUrlForDisplay > should handle complex URLs 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > New utility functions > cleanUrlForDisplay > should handle URLs without protocols 0ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Integration tests > should work with realistic URLs 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Integration tests > should handle development vs production contexts 1ms
 ✓ src/utils/url/__tests__/index.test.ts > URL Module Index > Integration tests > should provide consistent error types 1ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Individual Strategy Testing > 1. DudaJavaScriptStrategy should work 4ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Individual Strategy Testing > 2. HtmlContentStrategy should work 3ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Individual Strategy Testing > 3. HttpHeaderStrategy should work 3ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > High-Confidence Pattern Detection > should detect Duda from window.Parameters pattern 5ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > High-Confidence Pattern Detection > should detect Duda from DUDAONE SiteType pattern 2ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > High-Confidence Pattern Detection > should detect Duda from DM_DIRECT productId pattern 2ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > High-Confidence Pattern Detection > should detect Duda from dmBody selector pattern 2ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Medium-Confidence Pattern Detection > should detect Duda from CDN patterns 3ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Medium-Confidence Pattern Detection > should detect Duda from dmAlbum CSS classes 69ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Medium-Confidence Pattern Detection > should detect Duda from dudamobile.com references 25ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Multiple Pattern Detection > should have higher confidence with multiple high-confidence patterns 28ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Multiple Pattern Detection > should aggregate confidence from multiple strategies 3ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Negative Cases > should not detect Duda from unrelated content 1ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Negative Cases > should not detect Duda from generic content 1ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Negative Cases > should handle missing JavaScript content gracefully 2ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Error Handling > should handle strategy failures gracefully 5ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Error Handling > should continue with other strategies if JavaScript strategy fails 1ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Strategy Weight Testing > should prioritize JavaScript strategy over HTML content 1ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Confidence Scoring > should have very high confidence with multiple high-confidence patterns 8ms
 ✓ src/utils/cms/__tests__/detectors/duda.test.ts > Duda Detector > Confidence Scoring > should have medium confidence with CDN patterns only 25ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeUrl > should add HTTP protocol to URLs without protocol 6ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeUrl > should preserve existing HTTP protocol 1ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeUrl > should preserve existing HTTPS protocol 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeUrl > should handle URLs with paths and query parameters 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeUrl > should trim whitespace 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeUrl > should use custom default protocol 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeUrl > should throw error for null/undefined URLs 1ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeUrl > should throw error for non-string URLs 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > hasProtocol > should detect URLs with protocols 1ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > hasProtocol > should detect URLs without protocols 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > hasProtocol > should handle edge cases 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > extractProtocol > should extract protocols from valid URLs 85ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > extractProtocol > should return null for invalid URLs 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > removeProtocol > should remove protocols from URLs 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > removeProtocol > should return unchanged URLs without protocols 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > upgradeToHttps > should upgrade HTTP to HTTPS 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > upgradeToHttps > should leave HTTPS URLs unchanged 2ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > upgradeToHttps > should leave non-HTTP URLs unchanged 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > downgradeToHttp > should downgrade HTTPS to HTTP 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > downgradeToHttp > should leave HTTP URLs unchanged 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > downgradeToHttp > should leave non-HTTPS URLs unchanged 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > cleanUrl > should remove fragments 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > cleanUrl > should preserve query parameters by default 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > cleanUrl > should remove query parameters when requested 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > cleanUrl > should handle invalid URLs gracefully 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeDomain > should convert domain to lowercase 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeDomain > should preserve path case 0ms
 ✓ src/utils/url/__tests__/normalizer.test.ts > UrlNormalizer > normalizeDomain > should handle invalid URLs gracefully 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createDetectionResult > should create a basic detection result with defaults 2ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createDetectionResult > should create a detection result with custom options 1ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createDetectionResult > should handle partial options correctly 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createDetectionResult > should handle all CMS types 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createDetectionResult > should handle zero confidence correctly 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createDetectionResult > should handle maximum confidence correctly 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createPartialDetectionResult > should create a basic partial detection result with defaults 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createPartialDetectionResult > should create a partial detection result with custom options 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createPartialDetectionResult > should handle empty evidence array 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createPartialDetectionResult > should handle multiple evidence items 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createPartialDetectionResult > should handle different method types 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createWordPressResult > should create a WordPress result with default confidence 1ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createWordPressResult > should create a WordPress result with custom confidence 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createWordPressResult > should handle edge case confidence values 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createDrupalResult > should create a Drupal result with default confidence 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createDrupalResult > should create a Drupal result with custom confidence 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createJoomlaResult > should create a Joomla result with default confidence 35ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createJoomlaResult > should create a Joomla result with custom confidence 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createFailedResult > should create a failed result with default error message 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createFailedResult > should create a failed result with custom error message 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > createFailedResult > should be consistent with createDetectionResult defaults 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > CMS-Specific Result Comparison > should create distinct results for different CMS types 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > CMS-Specific Result Comparison > should have different detection methods for different CMS types 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > Type Safety and Interface Compliance > should satisfy CMSDetectionResult interface 3ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > Type Safety and Interface Compliance > should satisfy PartialDetectionResult interface 2ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > Type Safety and Interface Compliance > should handle optional properties correctly 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > Edge Cases and Error Conditions > should handle empty options objects 0ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > Edge Cases and Error Conditions > should handle null/undefined options gracefully 1ms
 ✓ src/test-utils/__tests__/factories/result-factory.test.ts > Result Factory Utilities > Edge Cases and Error Conditions > should preserve all provided option values 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > processAssistantRequest - Functional Tests > should process assistant request with default options 6ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > processAssistantRequest - Functional Tests > should process assistant request with custom options 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > processAssistantRequest - Functional Tests > should handle multiple screenshot files 3ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > processAssistantRequest - Functional Tests > should handle empty options object 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > processAssistantRequest - Functional Tests > should handle undefined options 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > processAssistantRequest - Functional Tests > should save output to file when outfile specified 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > processAssistantRequest - Functional Tests > should handle different temperature values 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > File Validation - Functional Tests > should handle file validation errors 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > File Validation - Functional Tests > should handle invalid image format errors 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > File Validation - Functional Tests > should validate multiple files and fail on first error 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > API Response Handling - Functional Tests > should handle API error responses 0ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > API Response Handling - Functional Tests > should handle rate limit errors 0ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > API Response Handling - Functional Tests > should handle malformed API responses (no data or error) 0ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > API Response Handling - Functional Tests > should handle empty data array 0ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > API Response Handling - Functional Tests > should handle non-assistant messages 0ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > API Response Handling - Functional Tests > should handle non-text content types 0ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > JSON Processing - Functional Tests > should handle invalid JSON responses 0ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > JSON Processing - Functional Tests > should handle JSON that fails schema validation 0ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > JSON Processing - Functional Tests > should handle complex payment methods array 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > JSON Processing - Functional Tests > should handle empty payment methods array 2ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > File Output - Functional Tests > should handle file write errors 2ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > File Output - Functional Tests > should handle different output file extensions 2ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > File Output - Functional Tests > should handle output files with special paths 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > Missing Run Data - Functional Tests > should handle missing run data gracefully 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > Missing Run Data - Functional Tests > should handle partial run data 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > Integration Scenarios - Functional Tests > should handle complete workflow with all options 1ms
 ✓ src/commands/__tests__/assistant.functional.test.ts > Functional: assistant.ts > Integration Scenarios - Functional Tests > should handle multiple assistant responses 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Error Classes > BrowserManagerError > should create error with message and type 2ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Error Classes > BrowserManagerError > should create error with context and cause 1ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Error Classes > BrowserManagerError > should default to browser_manager_error type 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Error Classes > BrowserNetworkError > should create network error with URL context 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Error Classes > BrowserNetworkError > should handle missing URL context 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Error Classes > BrowserResourceError > should create resource error with resource type 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Error Classes > BrowserResourceError > should handle missing resource type 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Error Classes > BrowserTimeoutError > should create timeout error with timeout and operation 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Error Classes > BrowserTimeoutError > should include context and cause 1ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Strategy Mappings > NAVIGATION_STRATEGIES > should have correct navigation strategies for all purposes 1ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Strategy Mappings > NAVIGATION_STRATEGIES > should have all required browser purposes 1ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Strategy Mappings > RESOURCE_BLOCKING_STRATEGIES > should have correct resource blocking strategies 42ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Strategy Mappings > RESOURCE_BLOCKING_STRATEGIES > should have aggressive strategy blocking most resources 2ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Strategy Mappings > RESOURCE_BLOCKING_STRATEGIES > should have moderate strategy preserving visual elements 2ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Strategy Mappings > RESOURCE_BLOCKING_STRATEGIES > should have minimal strategy blocking only non-essential resources 18ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Default Configuration > DEFAULT_ESSENTIAL_SCRIPT_PATTERNS > should include WordPress patterns 8ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Default Configuration > DEFAULT_ESSENTIAL_SCRIPT_PATTERNS > should include other CMS patterns 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Default Configuration > DEFAULT_ESSENTIAL_SCRIPT_PATTERNS > should include common library patterns 2ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Default Configuration > DEFAULT_BROWSER_CONFIG > should have sensible default values 10ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Default Configuration > DEFAULT_BROWSER_CONFIG > should have default resource blocking configuration 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Default Configuration > DEFAULT_BROWSER_CONFIG > should have default navigation configuration 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Default Configuration > DEFAULT_BROWSER_CONFIG > should have default concurrency configuration 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Default Configuration > DEFAULT_BROWSER_CONFIG > should have default debug configuration 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Type Validation > should validate BrowserPurpose type values 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Type Validation > should validate ResourceBlockingStrategy type values 0ms
 ✓ src/utils/browser/__tests__/types.test.ts > Browser Manager Types > Type Validation > should validate NavigationWaitStrategy type values 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should take screenshot with default width 8ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should take screenshot with custom width 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle HTTP URLs 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle HTTPS URLs 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle URLs with paths 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle URLs with query parameters 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle localhost URLs 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle different file extensions 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle relative paths 3ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle absolute paths 2ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle paths with spaces 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle paths with special characters 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle Unicode characters in paths 2ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle different width values 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle very small width values 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle very large width values 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > takeScreenshot - Functional Tests > should handle zero width value 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Error Handling - Functional Tests > should handle navigation errors 10ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Error Handling - Functional Tests > should handle network timeouts 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Error Handling - Functional Tests > should handle DNS resolution failures 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Error Handling - Functional Tests > should handle file system permission errors 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Error Handling - Functional Tests > should handle disk space errors 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Error Handling - Functional Tests > should handle errors with custom width 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Error Handling - Functional Tests > should handle multiple error scenarios 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Path Processing - Functional Tests > should process path with width correctly 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Path Processing - Functional Tests > should handle path without extension 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Path Processing - Functional Tests > should handle empty path 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Options Handling - Functional Tests > should use default width when not specified 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Options Handling - Functional Tests > should use default width when options not provided 1ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Options Handling - Functional Tests > should handle undefined width 3ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Options Handling - Functional Tests > should handle negative width values 2ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Integration Scenarios - Functional Tests > should handle multiple screenshots in sequence 0ms
 ✓ src/commands/__tests__/screenshot.functional.test.ts > Functional: screenshot.ts > Integration Scenarios - Functional Tests > should handle mixed success and failure scenarios 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateFilePath > should accept valid file paths 3ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateFilePath > should reject empty or invalid input 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateFilePath > should prevent directory traversal attacks 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateFilePath > should reject unsafe characters 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateFilePath > should accept safe characters only 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateImageExtension > should accept supported image formats 24ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateImageExtension > should reject unsupported formats 24ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateImageExtension > should handle files without extensions 2ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateImageFile > should validate existing image files 2ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateImageFile > should reject non-existent files 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateImageFile > should reject files with invalid paths 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateImageFile > should reject unsupported file extensions 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > validateImageFile > should reject directories 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > analyzeFilePath > should construct paths with width suffixes 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > analyzeFilePath > should handle paths with directories 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > analyzeFilePath > should add default extension if missing 2ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > analyzeFilePath > should use screenshot directory for bare filenames 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > analyzeFilePath > should validate input parameters 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > analyzeFilePath > should prevent directory traversal in constructed paths 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > loadCSVFromFile > should load valid CSV files 2ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > loadCSVFromFile > should reject invalid file paths 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > loadCSVFromFile > should handle non-existent files 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > loadCSVFromFile > should validate file path security 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > readFileSecurely > should read existing files 11ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > readFileSecurely > should validate file paths 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > readFileSecurely > should handle non-existent files 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > fileExists > should return true for existing files 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > fileExists > should return false for non-existent files 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > fileExists > should return false for invalid paths 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > fileExists > should handle various input types safely 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > getFileStats > should return stats for existing files 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > getFileStats > should validate file paths 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > getFileStats > should handle non-existent files 0ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > SUPPORTED_IMAGE_EXTENSIONS > should include common image formats 1ms
 ✓ src/utils/file/__tests__/operations.test.ts > File Operations > SUPPORTED_IMAGE_EXTENSIONS > should be an array with at least 5 formats 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Exports > should export BrowserManager class 2ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Exports > should export strategy mappings 1ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Exports > should export convenience functions 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Exports > should export semaphore utilities 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Convenience Configuration Functions > createDetectionConfig > should create detection config with defaults 1ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Convenience Configuration Functions > createDetectionConfig > should create detection config with overrides 1ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Convenience Configuration Functions > createDetectionConfig > should maintain detection-specific defaults when overriding 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Convenience Configuration Functions > createCaptureConfig > should create capture config with defaults 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Convenience Configuration Functions > createCaptureConfig > should create capture config with overrides 1ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Convenience Configuration Functions > createCaptureConfig > should maintain capture-specific defaults when overriding 1ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Convenience Configuration Functions > createAnalysisConfig > should create analysis config with defaults 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Convenience Configuration Functions > createAnalysisConfig > should create analysis config with overrides 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Convenience Configuration Functions > createAnalysisConfig > should maintain analysis-specific defaults when overriding 22ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Configuration Consistency > should have consistent base configuration across all configs 32ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Configuration Consistency > should have different purposes and strategies 1ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Configuration Consistency > should have appropriate timeout configurations 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Configuration Consistency > should have appropriate retry configurations 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Purpose-Strategy Mapping > should map detection purpose to domcontentloaded strategy 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Purpose-Strategy Mapping > should map capture purpose to networkidle0 strategy 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Purpose-Strategy Mapping > should map analysis purpose to networkidle2 strategy 2ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Resource Blocking Strategy Mapping > should map aggressive strategy to comprehensive blocking 4ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Resource Blocking Strategy Mapping > should map moderate strategy to selective blocking 1ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Resource Blocking Strategy Mapping > should map minimal strategy to minimal blocking 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Integration with BrowserManager > should create BrowserManager with detection config 1ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Integration with BrowserManager > should create BrowserManager with capture config 0ms
 ✓ src/utils/browser/__tests__/index.test.ts > Browser Module Index > Integration with BrowserManager > should create BrowserManager with analysis config 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should segment image with default options 3ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should segment image with custom header size 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should segment image with custom footer size 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should segment image with custom header and footer sizes 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should handle zero header size 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should handle zero footer size 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should handle very large header size 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should handle very large footer size 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should handle negative header size 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should handle negative footer size 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should handle undefined options 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > segmentImage - Functional Tests > should handle empty options object 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > File Handling - Functional Tests > should handle different image file extensions 4ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > File Handling - Functional Tests > should handle relative paths 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > File Handling - Functional Tests > should handle absolute paths 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > File Handling - Functional Tests > should handle paths with spaces 3ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > File Handling - Functional Tests > should handle paths with special characters 14ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > File Handling - Functional Tests > should handle Unicode characters in paths 14ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > File Handling - Functional Tests > should handle very long filenames 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > File Handling - Functional Tests > should handle filenames without extensions 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Error Handling - Functional Tests > should handle file not found errors 5ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Error Handling - Functional Tests > should handle invalid image format errors 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Error Handling - Functional Tests > should handle corrupted image file errors 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Error Handling - Functional Tests > should handle permission denied errors 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Error Handling - Functional Tests > should handle image too large errors 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Error Handling - Functional Tests > should handle errors with custom sizes 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Options Validation - Functional Tests > should handle extremely large sizes gracefully 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Options Validation - Functional Tests > should handle minimum safe integer sizes 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Options Validation - Functional Tests > should handle mixed positive and negative sizes 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Options Validation - Functional Tests > should handle fractional sizes (should be handled by the underlying utility) 0ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Integration Scenarios - Functional Tests > should handle multiple image processing in sequence 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Integration Scenarios - Functional Tests > should handle same image with different segment sizes 1ms
 ✓ src/commands/__tests__/footer.functional.test.ts > Functional: footer.ts > Integration Scenarios - Functional Tests > should handle default option fallbacks correctly 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Storage Initialization > should initialize storage with default data directory 18ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Storage Initialization > should initialize storage with custom data directory 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Storage Initialization > should handle storage initialization errors 6ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Statistics Handling > should handle statistics with valid data 5ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Statistics Handling > should handle empty statistics 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Statistics Handling > should handle statistics errors 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Query Building and Data Filtering > should build query with all options 6ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Query Building and Data Filtering > should handle queries with no results 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Query Building and Data Filtering > should handle date range parsing 3ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Query Building and Data Filtering > should handle invalid date range parsing 20ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Report Generation > should generate summary report by default 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Report Generation > should generate full report 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Report Generation > should generate pattern analysis 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Report Generation > should generate detection rules 5ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Report Generation > should generate comparative analysis 12ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Report Generation > should generate recommendations 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Report Generation > should handle report generation errors 2ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Data Export Functionality > should export data in JSON format 2ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Data Export Functionality > should export data in CSV format 35ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Data Export Functionality > should export data in JSONL format 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Data Export Functionality > should handle export errors 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Pattern Discovery and Insights > should generate insights from data points 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Pattern Discovery and Insights > should identify most common CMS 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Pattern Discovery and Insights > should identify fastest CMS 2ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > CMS Comparison Analysis > should compare two CMS types with sufficient data 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > CMS Comparison Analysis > should handle insufficient data for comparison 1ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > CMS Comparison Analysis > should generate comparative analysis report 4ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Error Handling > should handle missing data directory 2ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Error Handling > should handle corrupted data files 3ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Error Handling > should handle report generation failures 3ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Error Handling > should handle file writing errors 2ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Option Validation > should validate confidence threshold range 2ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Option Validation > should validate format options 6ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Option Validation > should validate export formats 2ms
 ✓ src/commands/__tests__/analyze.test.ts > Analyze Command > Option Validation > should validate CMS type filtering 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Basic input validation > should validate correct URLs 5ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Basic input validation > should reject null/undefined URLs 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Basic input validation > should reject non-string URLs 42ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Basic input validation > should reject empty URLs 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Length validation > should reject URLs exceeding default length limit 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Length validation > should respect custom length limits 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Security pattern validation > should reject URLs with obvious path traversal 11ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Security pattern validation > should reject dangerous protocols in URL 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Protocol validation > should allow HTTP and HTTPS by default 2ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Protocol validation > should reject invalid protocols 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Protocol validation > should respect custom allowed protocols 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Domain validation > should validate proper domains 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Domain validation > should reject localhost by default 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Domain validation > should allow localhost in development context 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Domain validation > should reject private IPs by default 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Domain validation > should allow private IPs when configured 5ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Domain validation > should reject domains exceeding length limits 2ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Domain validation > should reject domain labels exceeding length limits 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Domain validation > should reject blocked domains 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Port validation > should allow standard ports 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Port validation > should allow no port specification 8ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Port validation > should reject invalid port numbers through URL parsing 2ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Port validation > should reject blocked ports 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Port validation > should reject custom ports when not allowed 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Port validation > should allow custom ports when configured 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Path validation > should allow normal paths 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validate > Path validation > should reject path traversal in paths 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validateAndNormalize > should validate and normalize valid URLs 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validateAndNormalize > should validate and normalize URLs with custom context 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validateAndNormalize > should throw validation errors 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > validateAndNormalize > should preserve valid URLs with protocols 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > Context-based validation > should use development context appropriately 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > Context-based validation > should use production context appropriately 1ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > Context-based validation > should handle test context 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > Edge cases > should handle IPv6 addresses 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > Edge cases > should handle URLs with query parameters 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > Edge cases > should handle URLs with fragments 0ms
 ✓ src/utils/url/__tests__/validator.test.ts > UrlValidator > Edge cases > should handle internationalized domain names 0ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > createMockConfig > should create config with default values 3ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > createMockConfig > should override specific values 0ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > createTestConfig > should create optimized config for testing 0ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > createDebugConfig > should create config optimized for debugging 0ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > createProductionTestConfig > should create production-like config for testing 0ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > createMockGetConfig > should create a mock function with default config 2ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > createMockGetConfig > should create a mock function with custom config 0ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > createMockGetConfig > should be spyable across multiple calls 0ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > createSpyableConfig > should create a config object suitable for spying 1ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > Integration scenarios > should work with vi.doMock pattern 2ms
 ✓ src/test-utils/__tests__/mocks/config.test.ts > Config Mock Factory > Integration scenarios > should provide consistent configs across test scenarios 0ms
 ✓ src/utils/cms/__tests__/analysis/collector-script-collection.test.ts > DataCollector - Script Collection Bug Fix > Script Collection Timing Fix > should wait for page load before collecting scripts 7ms
 ✓ src/utils/cms/__tests__/analysis/collector-script-collection.test.ts > DataCollector - Script Collection Bug Fix > Script Collection Timing Fix > should document the bug symptoms before and after fix 2ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Strategy Execution > should execute all strategies and aggregate results 5ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Strategy Execution > should handle strategy failures gracefully 2ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Strategy Execution > should return unknown CMS when no strategies succeed 1ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Strategy Execution > should handle empty strategies array 9ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Timeout Handling > should respect strategy timeouts 4506ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Confidence Aggregation > should calculate weighted confidence correctly 1ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Confidence Aggregation > should calculate weighted average for low confidence strategies 1ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Strategy Weights > should apply default strategy weights 1ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Version Selection > should select version from highest confidence strategy 1ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Version Selection > should handle missing version information 1ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Error Reporting > should handle all strategies failing 1ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Error Reporting > should not report errors when some strategies succeed 1ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > Performance Tracking > should track execution time 1ms
 ✓ src/utils/cms/__tests__/detectors/base.test.ts > BaseCMSDetector > URL Normalization > should normalize URLs correctly 3ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > buildRobotsUrl > should use centralized joinUrl function 4ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > buildRobotsUrl > should handle URLs with paths 0ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > successful analysis > should analyze WordPress robots.txt successfully 4ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > successful analysis > should analyze Drupal robots.txt successfully 18ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > successful analysis > should analyze Joomla robots.txt successfully 8ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > successful analysis > should detect legacy Drupal 7 patterns 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > successful analysis > should detect WordPress through plugin patterns 9ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > successful analysis > should return Unknown for unrecognizable content 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > error handling > should handle network errors gracefully 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > error handling > should handle HTTP error responses 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > error handling > should handle timeout errors 0ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > error handling > should handle invalid URLs gracefully 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > version extraction > should extract Drupal version from comments 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > version extraction > should extract WordPress version from comments 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > version extraction > should extract Joomla version from comments 2ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > complex pattern matching > should handle mixed CMS patterns correctly 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > complex pattern matching > should handle case-insensitive pattern matching 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > analyze > complex pattern matching > should handle wildcard patterns correctly 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > getInterestingHeaders > should extract only interesting headers 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > getInterestingHeaders > should handle empty headers object 1ms
 ✓ src/utils/__tests__/robots-txt-analyzer.test.ts > RobotsTxtAnalyzer > getInterestingHeaders > should handle case-sensitive header matching 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should create a basic browser manager mock with all required methods 6ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should have mock functions for all methods 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should configure successful page creation by default 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should configure page creation failures when requested 4ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should return proper navigation info by default 11ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should return null navigation info when navigation fails 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should use custom navigation info when provided 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should configure navigation URL method properly 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should configure user agent methods properly 6ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should configure screenshot capture with default dimensions 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should use custom screenshot dimensions when provided 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > createMockBrowserManager > should configure cleanup methods properly 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > Configuration Options > should handle all configuration options together 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > Configuration Options > should handle empty options object 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > Configuration Options > should handle undefined options 35ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > Mock Behavior Verification > should allow verification of method calls 2ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > Mock Behavior Verification > should track call counts correctly 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > Mock Behavior Verification > should allow mock reset between tests 2ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > Type Safety > should satisfy BrowserManager interface requirements 1ms
 ✓ src/test-utils/__tests__/mocks/browser.test.ts > Browser Manager Mock Utilities > Type Safety > should handle unknown type casting properly 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > Constructor and Initialization > should initialize with data points 2ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > Constructor and Initialization > should handle empty data points array 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeMetaTagPatterns() > should discover WordPress meta tag patterns 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeMetaTagPatterns() > should discover Drupal meta tag patterns 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeMetaTagPatterns() > should calculate pattern confidence across multiple CMS types 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeMetaTagPatterns() > should filter patterns by frequency and confidence thresholds 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeMetaTagPatterns() > should discover Duda meta tag patterns 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeMetaTagPatterns() > should handle sites with unknown CMS 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeScriptPatterns() > should discover WordPress script patterns 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeScriptPatterns() > should discover Drupal script patterns 55ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeScriptPatterns() > should discover Duda script patterns 3ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeScriptPatterns() > should extract inline script patterns 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeScriptPatterns() > should handle scripts with no src or content 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeScriptPatterns() > should limit examples collected 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeDOMPatterns() > should discover WordPress DOM patterns 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeDOMPatterns() > should discover Duda DOM patterns 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeDOMPatterns() > should filter DOM patterns by frequency and confidence 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > analyzeDOMPatterns() > should handle empty DOM elements array 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > generateTechnologySignatures() > should generate comprehensive technology signatures 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > generateTechnologySignatures() > should generate comprehensive Duda technology signatures 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > generateTechnologySignatures() > should mark highly confident patterns as required 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > generateTechnologySignatures() > should skip Unknown CMS when generating signatures 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > generateTechnologySignatures() > should limit number of patterns per type 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > compareDetectionPatterns() > should generate comparative statistics for different CMS types 1ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > compareDetectionPatterns() > should handle mixed status codes 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > compareDetectionPatterns() > should handle sites with no detection results 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > Edge Cases and Error Handling > should handle data points with low confidence detection 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > Edge Cases and Error Handling > should handle multiple detection results per data point 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > Edge Cases and Error Handling > should handle empty pattern analysis gracefully 0ms
 ✓ src/utils/cms/__tests__/analysis/patterns.functional.test.ts > Functional: PatternDiscovery > Edge Cases and Error Handling > should handle malformed meta tag structures 0ms
 ✓ src/commands/__tests__/ground-truth-script-signals-bug.test.ts > Ground Truth Script Signals Bug Fix > Script Signal Detection > should detect wp-includes scripts correctly and not show redundant jQuery 4ms
 ✓ src/commands/__tests__/ground-truth-script-signals-bug.test.ts > Ground Truth Script Signals Bug Fix > Script Signal Detection > should show jQuery signal only when no WordPress patterns exist 1ms
 ✓ src/commands/__tests__/ground-truth-script-signals-bug.test.ts > Ground Truth Script Signals Bug Fix > Script Signal Detection > should filter out jQuery from different domains/CDNs 0ms
 ✓ src/commands/__tests__/ground-truth-script-signals-bug.test.ts > Ground Truth Script Signals Bug Fix > Script Signal Detection > should handle same-domain Bootstrap correctly 1ms
 ✓ src/commands/__tests__/ground-truth-script-signals-bug.test.ts > Ground Truth Script Signals Bug Fix > Script Signal Detection > should handle the original lamaisondaffichage.ca case correctly 1ms
 ✓ src/commands/__tests__/ground-truth-script-signals-bug.test.ts > Ground Truth Script Signals Bug Fix > Display Logic > should not show "No patterns found" when some patterns match 1ms
 ✓ src/commands/__tests__/ground-truth-script-signals-bug.test.ts > Ground Truth Script Signals Bug Fix > Display Logic > should show "No patterns found" only when ALL patterns are missing 0ms
 ✓ src/commands/__tests__/ground-truth-script-signals-bug.test.ts > Ground Truth Script Signals Bug Fix > Display Logic > should handle the original lamaisondaffichage.ca display case correctly 1ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > Setup Functions > should setup Vitest extensions without throwing 2ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > Setup Functions > should setup all Vitest extensions without throwing 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > Setup Functions > should verify Vitest extensions are working 1ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidCMSResult matcher > should pass for valid CMS result 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidCMSResult matcher > should fail for invalid confidence range 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidCMSResult matcher > should fail for missing required fields 1ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidCMSResult matcher > should fail for null/undefined input 1ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidCMSResult matcher > should fail for negative execution time 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidCMSResult matcher > should fail for non-array detection methods 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidPartialResult matcher > should pass for valid partial result 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidPartialResult matcher > should pass for partial result without evidence 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidPartialResult matcher > should fail for invalid confidence 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidPartialResult matcher > should fail for empty method string 21ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidPartialResult matcher > should fail for non-array evidence 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveConfidenceAbove matcher > should pass when confidence is above threshold 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveConfidenceAbove matcher > should fail when confidence is below threshold 2ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveConfidenceAbove matcher > should fail when confidence equals threshold 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveConfidenceAbove matcher > should fail for non-numeric confidence 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveConfidenceBelow matcher > should pass when confidence is below threshold 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveConfidenceBelow matcher > should fail when confidence is above threshold 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveConfidenceBelow matcher > should fail when confidence equals threshold 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveDetectedCMS matcher > should pass when CMS matches 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveDetectedCMS matcher > should fail when CMS does not match 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveDetectedCMS matcher > should fail for missing CMS field 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveExecutedWithin matcher > should pass when execution time is within range 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveExecutedWithin matcher > should pass when execution time is at boundaries 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveExecutedWithin matcher > should fail when execution time is outside range 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveExecutedWithin matcher > should fail for non-numeric execution time 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveUsedMethods matcher > should pass when detection methods match 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveUsedMethods matcher > should pass when checking subset of methods 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveUsedMethods matcher > should fail when methods do not match 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveUsedMethods matcher > should fail when missing some required methods 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveUsedMethods matcher > should fail for non-array detection methods 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeFailedDetection matcher > should pass for failed detection with error 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeFailedDetection matcher > should pass for failed detection with empty detection methods 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeFailedDetection matcher > should fail for successful detection 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeFailedDetection matcher > should fail for unknown CMS with high confidence 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveRedirected matcher > should pass when URL has redirected 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveRedirected matcher > should pass when redirect count is present 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveRedirected matcher > should pass when protocol was upgraded 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveRedirected matcher > should fail when URL has not redirected 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toHaveRedirected matcher > should fail for missing URL fields 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidCMSType matcher > should pass for valid CMS types 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidCMSType matcher > should fail for invalid CMS types 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > toBeValidCMSType matcher > should fail for non-string values 1ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > Error Messages > should provide helpful error messages for validation failures 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > Error Messages > should provide helpful error messages for method matching failures 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > Integration with Real Data > should work with realistic WordPress detection result 27ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > Integration with Real Data > should work with realistic failed detection result 0ms
 ✓ src/test-utils/__tests__/setup/jest-extensions.test.ts > Vitest Extensions > Integration with Real Data > should work with realistic partial detection result 0ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetryOpenAI > should retry on OpenAI-specific errors 4003ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Setup Functions > should have CMS detection setup function available 2ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Setup Functions > should have browser setup function available 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Setup Functions > should have strategy setup function available 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Setup Functions > should have analysis setup function available 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Setup Functions > should have screenshot setup function available 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Setup Functions > should have file setup function available 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Setup Functions > should have URL setup function available 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Setup Functions > should have command setup function available 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > setupTestEnvironment > should create test environment with defaults 2ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > setupTestEnvironment > should create test environment with custom options 1ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > setupTestEnvironment > should handle empty options object 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > teardownTestEnvironment > should teardown test environment without throwing 5ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > teardownTestEnvironment > should handle null environment gracefully 2ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > teardownTestEnvironment > should handle undefined environment gracefully 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > createTestContext > should create test context with defaults 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > createTestContext > should create test context with custom options 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > createTestContext > should handle empty options object 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > cleanupTestContext > should cleanup test context without throwing 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > cleanupTestContext > should handle null context gracefully 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > cleanupTestContext > should handle undefined context gracefully 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectSuccessfulDetection > should pass for valid successful detection 1ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectSuccessfulDetection > should fail for incorrect CMS 2ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectSuccessfulDetection > should fail for low confidence 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectSuccessfulDetection > should fail for missing required properties 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectFailedDetection > should pass for failed detection with error 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectFailedDetection > should pass for failed detection without error but no detection methods 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectFailedDetection > should fail for successful detection 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectFailedDetection > should fail for unknown CMS with high confidence 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectValidResult > should pass for valid result structure 1ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectValidResult > should fail for invalid confidence range 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectValidResult > should fail for negative execution time 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectValidResult > should fail for missing required fields 1ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectValidResult > should fail for non-array detection methods 85ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectDetectionTime > should pass for time within range 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectDetectionTime > should pass for time at boundaries 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectDetectionTime > should fail for time below range 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectDetectionTime > should fail for time above range 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectConfidenceRange > should pass for confidence within range 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectConfidenceRange > should pass for confidence at boundaries 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectConfidenceRange > should fail for confidence below range 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Assertion Helpers > expectConfidenceRange > should fail for confidence above range 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Utility Functions > createTestTempDir > should create temp directory path with test name 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Utility Functions > createTestTempDir > should sanitize test names with special characters 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Utility Functions > createTestTempDir > should create unique paths for same test name 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Utility Functions > cleanupTestResources > should cleanup test resources without throwing 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Utility Functions > cleanupTestResources > should be safe to call multiple times 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > testConfig > should have all required configuration properties 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > testConfig > should have valid timeout values 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > testConfig > should have valid test URLs 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > testConfig > should have reasonable configuration values 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Integration Tests > should work together in a typical test setup scenario 0ms
 ✓ src/test-utils/__tests__/setup/common-setup.test.ts > Common Setup Utilities > Integration Tests > should handle assertion helpers in realistic scenarios 1ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Meta Tag Detection > should detect Joomla from meta generator tag 5ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Meta Tag Detection > should handle missing meta tag gracefully 21ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > HTML Content Detection > should detect Joomla from joomla-specific paths 3ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > HTML Content Detection > should detect Joomla from content="Joomla!" meta tag 3ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > HTML Content Detection > should detect Joomla from "joomla" text in HTML 2ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > HTML Content Detection > should not detect Joomla from unrelated content 4ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Confidence Scoring > should have high confidence with meta tag detection 5ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Confidence Scoring > should have medium confidence with HTML content only 1ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Confidence Scoring > should aggregate confidence from multiple successful strategies 3ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Error Handling > should handle strategy failures gracefully 2ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Error Handling > should continue with other strategies if one fails 2ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Version Extraction > should extract version from meta generator tag 1ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Version Extraction > should handle version extraction with different formats 16ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Version Extraction > should work without version when not available 5ms
 ✓ src/utils/cms/__tests__/detectors/joomla.test.ts > Joomla Detector > Strategy Weights > should use correct strategy weights for joomla detection 7ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > High Confidence Patterns > should contain core Duda JavaScript patterns 2ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > High Confidence Patterns > should have high confidence scores for high-confidence patterns 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Medium Confidence Patterns > should contain CDN and domain patterns 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Medium Confidence Patterns > should contain CSS class patterns 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Medium Confidence Patterns > should contain builder identifiers 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Medium Confidence Patterns > should have medium confidence scores for medium-confidence patterns 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Meta Tag Patterns > should contain meta tag regex patterns 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Meta Tag Patterns > should match Duda-related content case-insensitively 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > All Patterns Collection > should include all pattern types 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > All Patterns Collection > should have unique patterns across categories 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Pattern Confidence Scores > should have confidence scores for all string patterns 2ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Pattern Confidence Scores > should have higher scores for high-confidence patterns 2ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Pattern Confidence Scores > should have realistic confidence ranges 25ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Pattern Completeness > should cover all major Duda signatures discovered in ground-truth analysis 0ms
 ✓ src/utils/cms/__tests__/patterns/duda.test.ts > Duda Pattern Constants > Pattern Completeness > should have patterns that are as const to ensure immutability 0ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should generate strategies with default options 5ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should handle custom data directory 1ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should handle custom output directory 2ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should filter by specific CMS types 71ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should apply minimum confidence threshold 1ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should handle dry run mode 1ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should show preview when requested 28ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should validate strategies when requested 15ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should skip test generation when disabled 12ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should skip validation when disabled 1ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateDetectionStrategies - Functional Tests > should handle combined options 1ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateIntegrationInstructions - Functional Tests > should generate integration instructions for strategies 1ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateIntegrationInstructions - Functional Tests > should handle single strategy 0ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > generateIntegrationInstructions - Functional Tests > should handle empty strategies map 0ms
 ✓ src/commands/__tests__/generate.functional.test.ts > Functional: generate.ts > Error Handling > should handle storage initialization errors 1ms
 ✓ src/test-utils/__tests__/integration/import-paths.test.ts > Test Utils Import Path Integration > Main index imports > should export all utilities from main index 104ms
 ✓ src/test-utils/__tests__/integration/import-paths.test.ts > Test Utils Import Path Integration > Factory index imports > should export all factories from factory index 1ms
 ✓ src/test-utils/__tests__/integration/import-paths.test.ts > Test Utils Import Path Integration > Mocks index imports > should export all mocks from mocks index 0ms
 ✓ src/test-utils/__tests__/integration/import-paths.test.ts > Test Utils Import Path Integration > Setup index imports > should successfully import setup index 0ms
 ✓ src/test-utils/__tests__/integration/import-paths.test.ts > Test Utils Import Path Integration > Types import > should successfully import types file 9ms
 ✓ src/commands/__tests__/assistants.functional.test.ts > Functional: assistants.ts > listAssistants - Functional Tests > should list available assistants successfully 6ms
 ✓ src/commands/__tests__/assistants.functional.test.ts > Functional: assistants.ts > listAssistants - Functional Tests > should handle API error responses 1ms
 ✓ src/commands/__tests__/assistants.functional.test.ts > Functional: assistants.ts > listAssistants - Functional Tests > should handle empty assistants list 1ms
 ✓ src/commands/__tests__/assistants.functional.test.ts > Functional: assistants.ts > listAssistants - Functional Tests > should handle malformed response 1ms
 ✓ src/commands/__tests__/assistants.functional.test.ts > Functional: assistants.ts > listAssistants - Functional Tests > should handle thrown exceptions 1ms
 ✓ src/commands/__tests__/assistants.functional.test.ts > Functional: assistants.ts > listAssistants - Functional Tests > should handle assistants with special characters 41ms
 ✓ src/commands/__tests__/assistants.functional.test.ts > Functional: assistants.ts > listAssistants - Functional Tests > should handle large assistant lists 5ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should analyze data with default options 9ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should handle custom data directory 1ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should filter by CMS types 1ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should apply minimum confidence filter 20ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should handle date range filtering 1ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should exclude unknown CMS when specified 1ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should generate summary report by default 2ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should generate full report 1ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should generate pattern analysis 1ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should generate detection rules 1ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should generate comparative analysis 2ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should generate recommendations 0ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should save report to file when output specified 0ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should export data when export option specified 1ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should handle CSV export 0ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should handle JSONL export 0ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > analyzeCollectedData - Functional Tests > should display next steps recommendations 0ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > generateInsightsSummary - Functional Tests > should generate insights for mock data points 1ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > generateInsightsSummary - Functional Tests > should handle empty data points 0ms
 ✓ src/commands/__tests__/analyze.functional.test.ts > Functional: analyze.ts > Error Handling > should handle storage initialization errors 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Core Analysis Functionality > should analyze blocking with default options 7ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Core Analysis Functionality > should handle custom data and output directories 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Core Analysis Functionality > should filter data points when includeUnblocked is false 16ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Core Analysis Functionality > should include all data points when includeUnblocked is true 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Report Generation > should generate JSON report by default 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Report Generation > should generate CSV report when format is csv 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Report Generation > should generate markdown report when format is markdown 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Report Generation > should generate all report formats when format is all 9ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Filtering Options > should handle minimum blocking rate filter 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Filtering Options > should handle provider filtering 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Filtering Options > should handle empty provider filter array 12ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Summary Display > should display comprehensive analysis summary 27ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Summary Display > should display top blocking providers 23ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Summary Display > should display top blocking methods 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Summary Display > should display evasion recommendations summary 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Summary Display > should display top immediate recommendations 0ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Error Handling > should handle file write errors 3ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Report Content Validation > should generate valid JSON report content 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Report Content Validation > should generate valid CSV report content 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Report Content Validation > should generate valid Markdown report content 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > File Path Generation > should generate timestamped report files 1ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > File Path Generation > should use custom output directory in file paths 5ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Integration Scenarios > should handle comprehensive analysis workflow 3ms
 ✓ src/commands/__tests__/analyze-blocking.functional.test.ts > analyze-blocking.ts Functional Tests > Integration Scenarios > should handle real-world blocking detection patterns 2ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > processChatRequest - Functional Tests > should process chat request with default model 14ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > processChatRequest - Functional Tests > should process chat request with custom model 4ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > processChatRequest - Functional Tests > should handle single screenshot file 2ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > processChatRequest - Functional Tests > should handle multiple screenshot files 1ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > processChatRequest - Functional Tests > should handle empty options object 17ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > processChatRequest - Functional Tests > should handle undefined options 1ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > processChatRequest - Functional Tests > should handle different model options 3ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Validation - Functional Tests > should handle file validation errors 2ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Validation - Functional Tests > should handle invalid file format errors 9ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Validation - Functional Tests > should handle corrupted file errors 1ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Validation - Functional Tests > should validate multiple files and fail on first error 0ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Validation - Functional Tests > should handle mixed valid and invalid files 0ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > API Response Handling - Functional Tests > should handle API success responses 0ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > API Response Handling - Functional Tests > should handle API error responses 0ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > API Response Handling - Functional Tests > should handle rate limit errors 2ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > API Response Handling - Functional Tests > should handle network timeout errors 0ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > API Response Handling - Functional Tests > should handle empty response content 0ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > API Response Handling - Functional Tests > should handle very long response content 1ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > API Response Handling - Functional Tests > should handle malformed API responses 0ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Types and Paths - Functional Tests > should handle different image file extensions 19ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Types and Paths - Functional Tests > should handle relative paths 4ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Types and Paths - Functional Tests > should handle absolute paths 1ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Types and Paths - Functional Tests > should handle paths with spaces 1ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > File Types and Paths - Functional Tests > should handle paths with special characters 1ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > Integration Scenarios - Functional Tests > should handle complete workflow with multiple files and custom model 0ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > Integration Scenarios - Functional Tests > should handle workflow with fallback to default model 0ms
 ✓ src/commands/__tests__/chat.functional.test.ts > Functional: chat.ts > Integration Scenarios - Functional Tests > should handle large batch of screenshots 1ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Critical Bug: HTML Pattern Analysis > LogRocket False Positive Case > should demonstrate the bug: simple counting vs domain-aware counting 8ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Critical Bug: HTML Pattern Analysis > LogRocket False Positive Case > should show HTML content patterns that cause false positives 2ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Critical Bug: HTML Pattern Analysis > WordPress Site Validation > should correctly validate real WordPress site 1ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Critical Bug: HTML Pattern Analysis > WordPress Site Validation > should handle WordPress site with mixed external references 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > hasSameDomainHtmlPattern > should handle: same domain absolute URL 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > hasSameDomainHtmlPattern > should handle: different domain absolute URL 1ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > hasSameDomainHtmlPattern > should handle: relative URL (implicit same domain) 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > hasSameDomainHtmlPattern > should handle: pattern within external absolute URL 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > hasSameDomainHtmlPattern > should handle: logrocket false positive case 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > hasSameDomainHtmlPattern > should handle: mixed same and different domain 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > isSameDomainScript > should validate relative URLs as same domain 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > isSameDomainScript > should validate same domain absolute URLs 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > isSameDomainScript > should reject different domain URLs 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Domain Validation Functions > isSameDomainScript > should handle the critical subdomain distinction 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Bug Impact Analysis > should show how the bug affects signal strength calculation 3ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Bug Impact Analysis > should demonstrate signal strength difference between methods 3ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Data Structure Validation > should validate mock data structures 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Data Structure Validation > should validate discriminative feature data 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Domain Validation Bug Analysis > Fix Implementation Guidelines > should provide pattern for fixing analyzeHtmlSignals method 1ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Test Utilities > Mock Data Generators > should create valid WordPress mock data 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Test Utilities > Mock Data Generators > should create LogRocket false positive case 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Test Utilities > Mock Data Generators > should create mixed external reference WordPress data 0ms
 ✓ src/commands/__tests__/ground-truth-simplified.test.ts > Ground-Truth Test Utilities > Validation Functions > should validate domain validation test cases structure 1ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > analyzeDataPoint > Cloudflare Detection > should detect Cloudflare challenge page 5ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > analyzeDataPoint > Cloudflare Detection > should detect Cloudflare Bot Management 1ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > analyzeDataPoint > PerimeterX Detection > should detect PerimeterX protection 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > analyzeDataPoint > reCAPTCHA Detection > should detect Google reCAPTCHA 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > analyzeDataPoint > Rate Limiting Detection > should detect generic rate limiting 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > analyzeDataPoint > No Blocking Detection > should not detect blocking on normal page 1ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > analyzeDataPoint > Multiple Blocking Methods > should detect multiple blocking signatures 1ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > generateBlockingReport > should generate comprehensive blocking report 2ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > generateBlockingReport > should handle empty dataset 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > generateBlockingReport > should calculate blocking rate correctly 1ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Evasion Strategy Recommendations > should recommend appropriate strategies for CAPTCHA 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Evasion Strategy Recommendations > should recommend proxy strategies for IP blocking 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Evasion Strategy Recommendations > should recommend timing strategies for rate limiting 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Risk Level Calculation > should assign critical risk for very hard evasion 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Risk Level Calculation > should assign low risk for easy evasion 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Provider Detection > should detect Cloudflare provider 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Provider Detection > should detect PerimeterX provider 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Provider Detection > should detect Google provider 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Provider Detection > should detect Imperva provider 0ms
 ✓ src/utils/cms/__tests__/analysis/bot-blocking.test.ts > BotBlockingAnalyzer > Provider Detection > should detect Akamai provider 0ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > HTML Pattern Subdomain Filtering > should only count same-domain wp-content references 3ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > HTML Pattern Subdomain Filtering > should not count different subdomain wp-content references 1ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > HTML Pattern Subdomain Filtering > should count relative wp-content URLs as same-domain 1ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > HTML Pattern Subdomain Filtering > should not count wp-content in absolute URLs within relative paths 0ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > HTML Pattern Subdomain Filtering > should handle wp-json patterns with same domain filtering 0ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > HTML Pattern Subdomain Filtering > should handle edge cases in domain extraction 1ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > Domain Matching Logic > should treat subdomains as different domains 0ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > Domain Matching Logic > should extract domains correctly from various URL formats 0ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > Domain Matching Logic > should count same-domain patterns correctly 0ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > Regression Tests > should handle the original logrocket.com bug case 0ms
 ✓ src/commands/__tests__/ground-truth-subdomain-bug.test.ts > Ground Truth Subdomain Bug Fix > Regression Tests > should still detect WordPress when same-domain wp-content exists 81ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > Constructor > should create semaphore with specified max concurrency 3ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > Constructor > should create semaphore with default max concurrency 1ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > Acquire and Release > should acquire slots when available 1ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > Acquire and Release > should queue requests when semaphore is full 1ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > Acquire and Release > should release slots correctly 0ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > Acquire and Release > should handle multiple queued requests 0ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > Acquire and Release > should handle concurrent acquire and release operations 11ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > State Management > should accurately track current state 6ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > State Management > should maintain consistency during operations 2ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > Error Handling > should handle edge cases gracefully 0ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > Semaphore > Error Handling > should handle zero max concurrency 0ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > createSemaphore > should create semaphore with default max concurrency from config 0ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > createSemaphore > should create semaphore with specified max concurrency 0ms
 ✓ src/utils/browser/__tests__/semaphore.test.ts > createSemaphore > should override config when max concurrency is provided 0ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should process CSV file with default widths 3ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should process CSV file with custom widths 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should handle single width specification 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should handle multiple custom widths 0ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should handle empty widths array by using defaults 0ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should handle very large width values 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should handle very small width values 0ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should handle zero width values 0ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should handle negative width values 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should handle undefined options 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > processCsvScreenshots - Functional Tests > should handle mixed valid and invalid widths 33ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > Error Handling - Functional Tests > should handle file not found errors 19ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > Error Handling - Functional Tests > should handle individual URL errors during processing 9ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > Error Handling - Functional Tests > should handle empty CSV files 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > CSV Processing - Functional Tests > should handle CSV with different URL formats 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > CSV Processing - Functional Tests > should handle CSV with different path formats 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > CSV Processing - Functional Tests > should handle CSV with extra columns 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > CSV Processing - Functional Tests > should handle large CSV files 2ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > CSV Processing - Functional Tests > should handle different file extensions 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > Integration Scenarios - Functional Tests > should process all combinations of widths and URLs 12ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > Integration Scenarios - Functional Tests > should handle CSV files with various separators (commas) 1ms
 ✓ src/commands/__tests__/csv.functional.test.ts > Functional: csv.ts > Integration Scenarios - Functional Tests > should handle special characters in file paths 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateOpenAIConfig > should pass validation in non-strict mode without API key 3ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateOpenAIConfig > should require API key in strict mode 1ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateOpenAIConfig > should validate API key format in strict mode 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateOpenAIConfig > should validate temperature range 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateOpenAIConfig > should validate topP range 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateOpenAIConfig > should validate maxTokens range 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validatePuppeteerConfig > should validate timeout minimum 1ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validatePuppeteerConfig > should validate viewport dimensions 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validatePuppeteerConfig > should validate maxConcurrency range 1ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateAppConfig > should validate environment values 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateAppConfig > should validate log level values 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateAppConfig > should validate log format values 1ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateAPIConfig > should validate retry attempts range 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateAPIConfig > should validate retry delay range 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigValidator > validateAPIConfig > should validate request timeout range 65ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > singleton behavior > should return the same instance 2ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > environment variable loading > should load configuration from environment variables 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > environment variable loading > should use defaults when environment variables are not set 1ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > environment variable loading > should parse numeric environment variables correctly 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > environment variable loading > should parse boolean environment variables correctly 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > config file loading > should attempt to load configuration from multiple file paths 1ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > config file loading > should handle invalid JSON in config file gracefully 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > config file loading > should prioritize environment variables over defaults 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > logger configuration updates > should update logger configuration when config is loaded 2ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > reloadConfig > should reload configuration and update logger 1ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > convenience functions > should provide getConfig convenience function 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > convenience functions > should provide reloadConfig convenience function 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > log level mapping > should default to DEBUG in development environment 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > log level mapping > should default to INFO in production environment 0ms
 ✓ src/utils/__tests__/config.test.ts > ConfigManager > log level mapping > should respect explicit LOG_LEVEL over NODE_ENV defaults 0ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > mockRetry > should have all retry utility methods 2ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > mockRetry > should execute function directly by default 1ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > mockRetry > should execute function with timeout by default 0ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > mockRetry > should allow custom mock implementations 1ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > mockUrlValidation > should have all URL validation methods 0ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > mockUrlValidation > should return default values by default 0ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > mockUrlValidation > should allow custom return values 0ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > mockUrlValidation > should track method calls correctly 1ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > makeUrlValidationFail > should configure all URL validation methods to throw default error 1ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > makeUrlValidationFail > should configure all URL validation methods to throw custom error 1ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > makeUrlValidationFail > should override previous mock configurations 44ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > setupCommonMocks > should set up mocks without throwing 1ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > setupCommonMocks > should be callable multiple times 0ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > resetCommonMocks > should clear all mock call history 1ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > resetCommonMocks > should reset mock implementations to defaults 1ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > resetCommonMocks > should be safe to call multiple times 0ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > resetCommonMocks > should be safe to call without prior setup 0ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > Integration Testing > should work together in a typical test scenario 0ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > Integration Testing > should handle error scenarios properly 2ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > Mock State Management > should maintain independent mock states 1ms
 ✓ src/test-utils/__tests__/mocks/common.test.ts > Common Mock Utilities > Mock State Management > should allow method-specific resets 0ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Core Functionality > should collect comprehensive data for a valid URL using real URL module 5ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Core Functionality > should collect comprehensive data for Duda websites 3ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Core Functionality > should handle custom collection config 45ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Core Functionality > should collect navigation information 5ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Core Functionality > should handle browser manager errors gracefully 1ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Data Collection > should collect meta tags 10ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Data Collection > should collect performance metrics 1ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Data Collection > should collect robots.txt data 1ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Error Handling > should handle page evaluation errors gracefully 3ms
 ✓ src/utils/cms/__tests__/analysis/collector.functional.test.ts > Functional: DataCollector (Rewritten) > Error Handling > should cleanup context on error 4ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > basic functionality > should accept valid input on first try 4ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > basic functionality > should handle case-insensitive input by default 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > basic functionality > should retry on invalid input 1ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > basic functionality > should handle empty string as valid input if included in allowed values 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > basic functionality > should handle Enter key when "enter" is in allowed values 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > help functionality > should show help when help value is entered 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > help functionality > should not show help if helpFunction is not provided 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > help functionality > should handle help value case-insensitively 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > invalid input handling > should display error message for invalid input 1ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > invalid input handling > should handle multiple invalid inputs before valid one 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > case sensitivity > should enforce case sensitivity when option is enabled 126ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > case sensitivity > should preserve original case in return value 1ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > error handling > should return null on readline error 1ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > error handling > should close readline even if error occurs 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > error handling > should handle non-Error objects in catch block 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > edge cases > should handle special characters in allowed values 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > edge cases > should handle whitespace in input 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > edge cases > should handle multiple consecutive invalid inputs 0ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > integration scenarios > should handle complex help workflow 1ms
 ✓ src/ground-truth/__tests__/interactive-ui.test.ts > InteractiveUI.getUserChoice > integration scenarios > should work with real-world CMS detection scenario 0ms
 ✓ src/test-utils/__tests__/mocks/logger-basic.test.ts > Logger Mock Basic Functionality > getLoggerMock > should return a logger with all required methods 3ms
 ✓ src/test-utils/__tests__/mocks/logger-basic.test.ts > Logger Mock Basic Functionality > getLoggerMock > should allow logger methods to be called 2ms
 ✓ src/test-utils/__tests__/mocks/logger-basic.test.ts > Logger Mock Basic Functionality > getLoggerMock > should track method calls 2ms
 ✓ src/utils/cms/__tests__/strategies/meta-tag-strategy.test.ts > MetaTagStrategy > detects CMS from meta tag with name="generator" 48ms
 ✓ src/utils/cms/__tests__/strategies/meta-tag-strategy.test.ts > MetaTagStrategy > detects CMS from meta tag with name="Generator" 2ms
 ✓ src/utils/screenshot/__tests__/types.test.ts > Screenshot Error Classes > ScreenshotError > should create error with message 2ms
 ✓ src/utils/screenshot/__tests__/types.test.ts > Screenshot Error Classes > ScreenshotError > should create error with options 2ms
 ✓ src/utils/screenshot/__tests__/types.test.ts > Screenshot Error Classes > ScreenshotValidationError > should create validation error 1ms
 ✓ src/utils/screenshot/__tests__/types.test.ts > Screenshot Error Classes > ScreenshotNetworkError > should create network error 1ms
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Report Generation > should generate comprehensive analysis report
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Report Generation > should save report to file when output path provided
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Report Generation > should handle empty data points gracefully
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Pattern Summary Generation > should generate pattern discovery summary
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Pattern Summary Generation > should include pattern confidence scores
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Pattern Summary Generation > should format patterns properly in markdown
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Error Handling > should handle file write errors gracefully
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Error Handling > should handle pattern analysis errors
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Report Content Validation > should include all required sections in full report
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Report Content Validation > should include statistics and metrics
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Report Content Validation > should include pattern details
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Report Content Validation > should format data properly for markdown
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Integration Scenarios > should handle mixed CMS data points
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Integration Scenarios > should generate complete workflow from data to report
 ↓ src/utils/cms/__tests__/analysis/reports.functional.test.ts > AnalysisReporter Functional Tests > Integration Scenarios > should handle large datasets efficiently
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should process WordPress URLs successfully 20ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should process Drupal URLs successfully 1ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should process Duda URLs successfully 3ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should handle unknown CMS sites 2ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should handle DNS failures with skip reporting 1ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should handle network errors gracefully 3ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should handle mixed URL scenarios 1ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should handle empty URL array 8ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should handle data collection options 11ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should handle iterator initialization failures 3ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should call finalize even when detection fails 2ms
 ✓ src/commands/__tests__/detect_cms.functional.test.ts > Functional: detect_cms.ts > processCMSDetectionBatch - Functional Tests > should track progress correctly 11ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > withRetryOpenAI > should not exceed maximum retries 7004ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > Error detection > should detect errors by error code 12ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > Error detection > should detect errors by error type 12ms
 ✓ src/utils/__tests__/retry.test.ts > Retry Utility > Error detection > should handle non-Error objects 12ms

 Test Files  69 passed | 1 skipped (70)
      Tests  1519 passed | 15 skipped (1534)
   Start at  09:00:22
   Duration  13.36s (transform 3.13s, setup 0ms, collect 14.13s, tests 28.53s, environment 16ms, prepare 15.82s)

